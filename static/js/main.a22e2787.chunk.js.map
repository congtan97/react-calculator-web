{"version":3,"sources":["components/Display.js","components/Button.js","components/Panel.js","logic/operate.js","logic/calculate.js","logic/number.js","App.js","reportWebVitals.js","index.js"],"names":["Display","className","this","props","value","React","Component","Button","handleClick","clickHandler","name","orange","blue","wide","join","trim","onClick","ButtonPanel","buttonName","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","calculate","obj","total","next","test","result","includes","parseFloat","App","state","console","log","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a22e2787.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Display.css\";\r\n\r\nexport default class Display extends React.Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-display\">\r\n        <div>{this.props.value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nexport default class Button extends React.Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    orange: PropTypes.bool,\r\n    blue: PropTypes.bool,\r\n    wide: PropTypes.bool,\r\n    clickHandler: PropTypes.func,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.clickHandler(this.props.name);\r\n  };\r\n\r\n  render() {\r\n    const className = [\r\n      \"component-button\",\r\n      this.props.orange ? \"orange\" : \"\",\r\n      this.props.blue ? \"blue\" : \"\",\r\n      this.props.wide ? \"wide\" : \"\",\r\n    ];\r\n\r\n    return (\r\n      <div className={className.join(\" \").trim()}>\r\n        <button onClick={this.handleClick}>{this.props.name}</button>\r\n      </div>\r\n    );\r\n  }\r\n}","import Button from \"./Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Panel.css\";\r\n\r\nexport default class ButtonPanel extends React.Component {\r\n  static propTypes = {\r\n    clickHandler: PropTypes.func,\r\n  };\r\n\r\n  handleClick = buttonName => {\r\n    this.props.clickHandler(buttonName);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-button-panel\">\r\n        <div>\r\n          <Button name=\"AC\" clickHandler={this.handleClick} blue />\r\n          <Button name=\"+/-\" clickHandler={this.handleClick} blue />\r\n          <Button name=\"%\" clickHandler={this.handleClick} blue />\r\n          <Button name=\"รท\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"7\" clickHandler={this.handleClick} />\r\n          <Button name=\"8\" clickHandler={this.handleClick} />\r\n          <Button name=\"9\" clickHandler={this.handleClick} />\r\n          <Button name=\"x\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"4\" clickHandler={this.handleClick} />\r\n          <Button name=\"5\" clickHandler={this.handleClick} />\r\n          <Button name=\"6\" clickHandler={this.handleClick} />\r\n          <Button name=\"-\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"1\" clickHandler={this.handleClick} />\r\n          <Button name=\"2\" clickHandler={this.handleClick} />\r\n          <Button name=\"3\" clickHandler={this.handleClick} />\r\n          <Button name=\"+\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"0\" clickHandler={this.handleClick} wide />\r\n          <Button name=\".\" clickHandler={this.handleClick} />\r\n          <Button name=\"=\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Big from \"big.js\";\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n  const one = Big(numberOne || \"0\");\r\n  const two = Big(numberTwo || (operation === \"รท\" || operation === 'x' ? \"1\": \"0\")); //If dividing or multiplying, then 1 maintains current value in cases of null\r\n  if (operation === \"+\") {\r\n    return one.plus(two).toString();\r\n  }\r\n  if (operation === \"-\") {\r\n    return one.minus(two).toString();\r\n  }\r\n  if (operation === \"x\") {\r\n    return one.times(two).toString();\r\n  }\r\n  if (operation === \"รท\") {\r\n    if (two == 0) {\r\n      alert(\"Divide by 0 error\");\r\n      return \"0\";\r\n    } else {\r\n      return one.div(two).toString();\r\n    }\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n}\r\n","import Big from \"big.js\";\r\n\r\nimport operate from \"./operate\";\r\nimport isNumber from \"./number\";\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:String      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === \"AC\") {\r\n    return {\r\n      total: null,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === \"0\" && obj.next === \"0\") {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return { next: obj.next + buttonName };\r\n      }\r\n      return { next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\r\n      return {\r\n        next,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === \"%\") {\r\n    if (obj.operation && obj.next) {\r\n      const result = operate(obj.total, obj.next, obj.operation);\r\n      return {\r\n        total: Big(result)\r\n          .div(Big(\"100\"))\r\n          .toString(),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    if (obj.next) {\r\n      return {\r\n        next: Big(obj.next)\r\n          .div(Big(\"100\"))\r\n          .toString(),\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === \".\") {\r\n    if (obj.next) {\r\n      // ignore a . if the next number already has one\r\n      if (obj.next.includes(\".\")) {\r\n        return {};\r\n      }\r\n      return { next: obj.next + \".\" };\r\n    }\r\n    return { next: \"0.\" };\r\n  }\r\n\r\n  if (buttonName === \"=\") {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    } else {\r\n      // '=' with no operation, nothing to do\r\n      return {};\r\n    }\r\n  }\r\n\r\n  if (buttonName === \"+/-\") {\r\n    if (obj.next) {\r\n      return { next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  // if (!obj.next && !obj.total) {\r\n  //   return {};\r\n  // }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    return {\r\n      total: operate(obj.total, obj.next, obj.operation),\r\n      next: null,\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}\r\n","export default function isNumber(item) {\r\n    return /[0-9]+/.test(item);\r\n}","import React from \"react\";\nimport Display from \"./components/Display\";\nimport ButtonPanel from \"./components/Panel\";\nimport calculate from \"./logic/calculate\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  state = {\n    total: null,\n    next: null,\n    operation: null,\n  };\n\n  handleClick = buttonName => {\n    console.log(\"handleClick is called after clicking \" + buttonName + \" button.\");\n    this.setState(calculate(this.state, buttonName));\n  };\n\n  render() {\n    return (\n      <div className=\"component-app\">\n        <Display value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}